include classpath("fix-core-template.conf")      # see ./fix/core/src/main/resources/fix-core-template.conf
include classpath("fix-deltix-template.conf")    # see ./fix/deltix/src/main/resources/fix-deltix-template.conf
include classpath("crypto-gemini-template.conf") # see ./gemini/src/main/resources/crypto-gemini-template.conf


# Deltix uses TimeBase for market data, security metada and cross-component messaging
timebase.settings {
	url = "dxtick://localhost:@devenvTimeBasePort@"
}


connectors {

	// Simulator is generally handy in verifying expected event sequence
	SIM: ${sim}

	# Connector instance name should be uppercase and less than 10 symbols - ALPHANUMERIC(10)
	GEMINI: ${template.connector.sample.crypto.gemini} {
		settings {
			restUrl = "https://api.sandbox.gemini.com/"
			websocketUrl = "wss://api.sandbox.gemini.com/"

			apiKey = "<API_KEY>"        # Gemini API Key
			apiSecret = "<API_SECRET>"  # Gemini API Secret
		}
	}

	# Connector instance name should be uppercase and less than 10 symbols - ALPHANUMERIC(10)
	DELTIX: ${template.connector.sample.fix.deltix} {
		settings {
			host = localhost
			port = 9001  # port as defined for Deltix FIX Gateway

			senderCompId = "TCLIENT"  # SenderCompID as defined for Deltix FIX Gateway
			targetCompId = "DELTIX"

			schedule = {
				zoneId = "America/New_York"
				intervals = [
					{
						startTime = "17:30:00",
						endTime = "17:00:00",
						startDay = FRIDAY,
						endDay = FRIDAY
					}
				]
			}
		}
	}

}

risk.server-wide = null # disables risk rules

aeron = null
messageBus : ${template.messageBus.ebit} {
	settings {
		host = localhost
	}
}
